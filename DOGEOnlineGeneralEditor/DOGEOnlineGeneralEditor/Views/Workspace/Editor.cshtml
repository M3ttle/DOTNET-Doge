@using DOGEOnlineGeneralEditor.Models.ViewModels
@model EditorViewModel

@{
    ViewData["Title"] = "Editor";
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/ace")

@Scripts.Render("~/bundles/signalr")
<script src="~/signalr/hubs"></script>

@{Html.RenderPartial("_ProjectsNav"); }

@using (Html.BeginForm("Save", "File", FormMethod.Post, null))
{
    @Html.AntiForgeryToken()

    <div class="form-inline">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="from-group">
            <select id="LanguageTypeID" name="LanguageTypeID" class="form-control">
                @foreach (var item in Model.LanguageTypes)
                {
                    if (item.ID == Model.LanguageTypeID)
                    {
                        <option value="@item.ID" data-mode="@item.AceMode" selected="selected">@item.Name</option>
                    }
                    else
                    {
                        <option value="@item.ID" data-mode="@item.AceMode">@item.Name</option>
                    }
                }
            </select>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UserThemeID, "Ace Theme", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserThemeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserThemeID, "", new { @class = "text-danger" })
            </div>
        </div>
        
        @Html.HiddenFor(m => m.Data, new { @id = "hiddenEditor"})

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="saveBtn" name="saveBtn" type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<header class="header">

</header>

<input value="@Model.ID" id="fileID" name="fileID" type="hidden">
<div id="editor">@Model.Data</div>
<input type="hidden" id="userNameLogged" name="userNameLogged" value="@HttpContext.Current.User.Identity.Name" />

<script>
    $(function () {
        
        var editor = ace.edit("editor");
        var theme = $("#UserThemeID").val();
        var selected = $(this).find('option:selected');
        var mode = selected.data('mode');
        editor.getSession().setMode(mode);
        editor.setTheme(theme);
        editor.getSession().setUseWrapMode(true);
        editor.setShowPrintMargin(false);
        editor.focus();
        
        $("#LanguageTypeID").change(function () {
            var selected = $(this).find('option:selected');
            var mode = selected.data('mode');
            editor.getSession().setMode(mode);
        });

        $("#UserThemeID").change(function () {
            var theme = $("#UserThemeID").val();
            editor.setTheme(theme);
        });

        // Copy the contents of the editor into our hidden editor for further processing
        $("form").submit(function () {
            $("#hiddenEditor").val(editor.getSession().getValue());
        });

    });

</script>
<script src="~/Scripts/editorHubProxy.js"></script>