@using DOGEOnlineGeneralEditor.Models.ViewModels
@model CreateFileViewModel

@{
    ViewBag.Title = "Create";
}

<div class="space-around">
    <div class="small-table-container">
        <div class="doge-header">Create</div>
        <div class="form-container">

            @using (Html.BeginForm(Html.BeginForm("Create", "File", FormMethod.Post)))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.ProjectID)
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LanguageTypeID, "LanguageTypeID", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("LanguageTypeID", null, htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
                <div>
                    @Html.ActionLink("Back to project", "Details", "Project", new { id = Model.ProjectID }, null)
                </div>
            }
        </div>
    </div>

    <div class="small-table-container">
        <div class="doge-header">Upload</div>
        <div class="form-container">

            @using (Html.BeginForm("CreateFromFile", "File", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.ProjectID)
                <div class="form-group">
                    <label for="fileBrowser">Select File:</label>
                    <input type="file" name="postedFile" id="fileBrowser" />
                    @Html.ValidationMessageFor(model => model.LanguageTypeID, "", new { @class = "text-danger" })
                    <span id="filesize-error"class="field-validation-error text-danger" style="display: none;">Filesize cannot exceed 5MB</span>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LanguageTypeID, "LanguageTypeID", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("LanguageTypeID", null, htmlAttributes: new { @class = "form-control" })
                    
                </div>
                <div class="form-group">
                    <input type="submit" value="Upload" class="btn btn-default" />
                </div>
                <span style="color:green">@ViewBag.Message</span>
                <div>
                    @Html.ActionLink("Back to project", "Details", "Project", new { id = Model.ProjectID }, null)
                </div>
            }
        </div>
    </div>
</div>

        

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <script>
                var myFile = document.getElementById('fileBrowser');

                //binds to onchange event of the input field
                myFile.addEventListener('change', function () {
                    var fileSize = this.files[0].size / 1024 / 1024;
                    if (fileSize > 5){
                        myFile.value = "";
                        document.getElementById("filesize-error").style.display = "inline";
                    }
                    else {
                        document.getElementById("filesize-error").style.display = "none";
                    }
                });
            </script>
        }
